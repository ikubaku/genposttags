//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "PostHistory")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key, auto_increment = false)]
    pub id: i32,
    #[sea_orm(column_name = "PostHistoryTypeId")]
    pub post_history_type_id: i8,
    #[sea_orm(column_name = "PostId")]
    pub post_id: i32,
    #[sea_orm(column_name = "RevisionGUID")]
    pub revision_guid: Option<String>,
    #[sea_orm(column_name = "CreationDate")]
    pub creation_date: Option<DateTime>,
    #[sea_orm(column_name = "UserId")]
    pub user_id: Option<i32>,
    #[sea_orm(column_name = "UserDisplayName")]
    pub user_display_name: Option<String>,
    #[sea_orm(column_name = "Comment", column_type = "Text", nullable)]
    pub comment: Option<String>,
    #[sea_orm(
        column_name = "Text",
        column_type = "Custom(\"MEDIUMTEXT\".to_owned())",
        nullable
    )]
    pub text: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::posts::Entity",
        from = "Column::PostId",
        to = "super::posts::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Posts,
    #[sea_orm(
        belongs_to = "super::post_history_type::Entity",
        from = "Column::PostHistoryTypeId",
        to = "super::post_history_type::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PostHistoryType,
}

impl Related<super::posts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Posts.def()
    }
}

impl Related<super::post_history_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostHistoryType.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
